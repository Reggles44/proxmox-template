---
- hosts: 127.0.0.1
  connection: local
  become: true

  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
          - software-properties-common

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian bookworm stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

    - name: add packer user to docker
      user:
        group: docker
        name: ubuntu

      
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          # it is usually recommended to specify which version you want to install
          - kubelet=1.31
          - kubeadm=1.31
          - kubectl=1.31
          
    - name: hold kubernetes binary versions (prevent from being updated)
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
          
  # this has to do with nodes having different internal/external/mgmt IPs
  # {{ node_ip }} comes from vagrant, which I'm not using yet
  #  - name: Configure node ip - 
  #    lineinfile:
  #      path: /etc/default/kubelet
  #      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
        
    - name: add ubuntu user to docker
      user:
        name: ubuntu
        group: docker
    
    - name: reboot to apply swap disable
      reboot:
        reboot_timeout: 180 #allow 3 minutes for reboot to happen

